<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>

const int mechanics = 4; 
const int pits = 3;


typedef int[0, pits-1] pit_t; 
typedef int[0, pits*mechanics-1] mech_t; 
chan incoming[pits], leaving[pits], done[mechanics*pits], inPosition[pits];
 </declaration><template><name x="5" y="5">Mechanic</name><parameter>const mech_t wheel </parameter><declaration>/*
void finish(){
  finished[wheel] = true;
}
*/

clock t;</declaration><location id="id0" x="-40" y="200"><name x="-50" y="170">Working</name></location><location id="id1" x="-40" y="312" color="#ff0000"><name x="-50" y="282">Problems</name></location><location id="id2" x="-368" y="200" color="#00ff00"><name x="-416" y="168">Waiting</name></location><location id="id3" x="72" y="-96"><name x="62" y="-126">Preparing</name></location><location id="id4" x="72" y="104"></location><init ref="id2"/><transition action=""><source ref="id2"/><target ref="id3"/><label kind="select" x="-208" y="7">e: pit_t</label><label kind="synchronisation" x="-240" y="32">incoming[e]?</label></transition><transition action=""><source ref="id4"/><target ref="id0"/></transition><transition action=""><source ref="id0"/><target ref="id2"/><label kind="synchronisation" x="-256" y="208">done[wheel]</label></transition><transition><source ref="id0"/><target ref="id1"/></transition><transition controllable="false" action=""><source ref="id3"/><target ref="id4"/><label kind="select" x="88" y="-32">e: pit_t</label><label kind="synchronisation" x="80" y="0">inPosition[e]?</label></transition></template><template><name>Pit</name><parameter>const pit_t car</parameter><declaration>clock t;
mech_t list[mechanics];

</declaration><location id="id5" x="-384" y="344"><name x="-424" y="336">Left</name></location><location id="id6" x="-248" y="120"><name x="-232" y="112">CarInPos</name></location><location id="id7" x="40" y="80" color="#ff0000"><name x="30" y="50">Crash</name></location><location id="id8" x="-248" y="-104"><name x="-258" y="-134">IncomingCar</name><label kind="invariant" x="-264" y="-88">t&lt;=10</label></location><location id="id9" x="-248" y="344" color="#00ff00"><name x="-258" y="314">Leave</name></location><location id="id10" x="-384" y="-104"><name x="-400" y="-136">Pit</name></location><init ref="id10"/><transition><source ref="id6"/><target ref="id9"/></transition><transition controllable="false" action=""><source ref="id5"/><target ref="id10"/><label kind="synchronisation" x="-464" y="104">leaving[car]!</label></transition><transition action=""><source ref="id9"/><target ref="id5"/><label kind="synchronisation" x="-376" y="329">leaving[car]!</label></transition><transition action=""><source ref="id9"/><target ref="id7"/><label kind="synchronisation" x="-168" y="173">incoming[car+1]?</label></transition><transition action=""><source ref="id8"/><target ref="id6"/><label kind="guard" x="-304" y="-32">t&gt;=5</label><label kind="synchronisation" x="-344" y="56">inPosition[car]!</label></transition><transition action=""><source ref="id8"/><target ref="id7"/><label kind="guard" x="-136" y="-80">t&lt;5</label><label kind="synchronisation" x="-168" y="-51">leaving[car-1]?</label><label kind="comments">problem</label></transition><transition controllable="false" action=""><source ref="id10"/><target ref="id8"/><label kind="synchronisation" x="-368" y="-128">incoming[car]!</label><label kind="assignment" x="-376" y="-104">t=0</label></transition></template><system>// List one or more processes to be composed into a system.
system Pit, Mechanic;</system></nta>