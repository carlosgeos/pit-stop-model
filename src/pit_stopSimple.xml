<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>const int MECHS = 4; 
const int MIN_WHEEL_CHANGE_TIME = 1900;
const int DELAY_WHEEL_CHANGE_TIME = 3500;
const int MAX_WHEEL_TIME = 10000;

typedef int[0, MECHS - 1] mechId_t;

// Boolean array which gets updated whenever a mechanic finishes working on a wheel
bool wheelReady[MECHS];

// The pit can broadcast to all mechanics that the pit is stopped using this broadcast channel
broadcast chan carStopped;

// channels who mimic the pit behind and the pit in front
chan comingInFront;
chan leavingBehind;


// Just to keep track of real time, this clock is never reset
clock global_time;
</declaration><template><name x="5" y="5">Mechanic</name><parameter>const mechId_t mechId</parameter><declaration>clock x;

void finishWork(mechId_t w) {
	wheelReady[w] = true;
}
</declaration><location id="id0" x="-384" y="-72" color="#ffa500"><name x="-400" y="-48">delay</name><urgent/></location><location id="id1" x="-192" y="-176"><name x="-176" y="-184">working</name><label kind="invariant" x="-202" y="-161">x &lt;= MAX_WHEEL_TIME</label></location><location id="id2" x="-592" y="-176" color="#00ff00"><name x="-656" y="-184">ready</name></location><init ref="id2"/><transition action=""><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="-432" y="-304">carStopped?</label><label kind="assignment" x="-432" y="-288">x = 0</label><nail x="-496" y="-256"/><nail x="-280" y="-256"/></transition><transition action=""><source ref="id0"/><target ref="id2"/><label kind="assignment" x="-584" y="-64">finishWork(mechId)</label><nail x="-496" y="-72"/></transition><transition controllable="false" action=""><source ref="id1"/><target ref="id0"/><label kind="guard" x="-288" y="-64">x &gt;= DELAY_WHEEL_CHANGE_TIME</label><nail x="-272" y="-72"/></transition><transition controllable="false" action=""><source ref="id1"/><target ref="id2"/><label kind="guard" x="-480" y="-168">x &gt;= MIN_WHEEL_CHANGE_TIME</label><label kind="assignment" x="-480" y="-144">finishWork(mechId)</label><nail x="-280" y="-112"/><nail x="-496" y="-112"/></transition></template><template><name>Pit</name><declaration>clock x;
clock waitingTime;

bool isCarReady() {
	return forall (i: mechId_t) wheelReady[i];
}

void reset() {
	int i;
	for(i = 0; i &lt; MECHS; i++) {
    		wheelReady[i] = false;
  	}
}
</declaration><location id="id3" x="-224" y="240" color="#00ffff"><name x="-264" y="264">waiting_exit</name><label kind="invariant" x="-264" y="280">x &lt;= 20000</label></location><location id="id4" x="-632" y="160"><name x="-616" y="168">recovery</name></location><location id="id5" x="-224" y="-16" color="#ffa500"><name x="-352" y="-24">agressive_exit</name></location><location id="id6" x="-480" y="-112" color="#ff0000"><name x="-496" y="-144">crash</name></location><location id="id7" x="-768" y="-16" color="#ffa500"><name x="-904" y="-24">agressive_entry</name></location><location id="id8" x="-768" y="160" color="#00ffff"><name x="-896" y="152">fail_safe_entry</name></location><location id="id9" x="-224" y="160" color="#00ffff"><name x="-336" y="152">fail_safe_exit</name></location><location id="id10" x="-8" y="72" color="#00ff00"><name x="16" y="64">leaving</name></location><location id="id11" x="-224" y="72"><name x="-208" y="48">ready_to_leave</name><committed/></location><location id="id12" x="-1008" y="72"><name x="-1088" y="64">on_track</name><label kind="invariant" x="-1032" y="88">x &lt;= 1</label></location><location id="id13" x="-552" y="72"><name x="-592" y="32">car_in_pos</name></location><location id="id14" x="-768" y="72"><name x="-848" y="48">incoming</name><committed/></location><init ref="id12"/><transition action=""><source ref="id3"/><target ref="id9"/><label kind="guard" x="-184" y="192">waitingTime &gt; 2000</label><nail x="-192" y="200"/></transition><transition controllable="false" action=""><source ref="id9"/><target ref="id3"/><label kind="guard" x="-376" y="224">x &lt; 18000</label><label kind="synchronisation" x="-376" y="192">comingInFront ?</label><label kind="assignment" x="-376" y="208">waitingTime = 0</label><nail x="-256" y="200"/></transition><transition action=""><source ref="id9"/><target ref="id10"/><label kind="guard" x="-176" y="96">x &gt;= 600</label></transition><transition><source ref="id11"/><target ref="id9"/></transition><transition action=""><source ref="id8"/><target ref="id13"/><label kind="guard" x="-712" y="88">x &gt;= 600</label><label kind="synchronisation" x="-712" y="72">carStopped !</label></transition><transition controllable="false" action=""><source ref="id8"/><target ref="id4"/><label kind="synchronisation" x="-760" y="176">leavingBehind ?</label></transition><transition action=""><source ref="id4"/><target ref="id13"/><label kind="guard" x="-552" y="112">x &gt;= 900</label><label kind="synchronisation" x="-552" y="96">carStopped !</label><nail x="-600" y="160"/></transition><transition><source ref="id14"/><target ref="id8"/></transition><transition action=""><source ref="id5"/><target ref="id10"/><label kind="guard" x="-136" y="-8">x &gt;= 500</label><nail x="-128" y="24"/></transition><transition><source ref="id11"/><target ref="id5"/></transition><transition controllable="false" action=""><source ref="id5"/><target ref="id6"/><label kind="synchronisation" x="-320" y="-136">comingInFront ?</label><nail x="-224" y="-112"/></transition><transition controllable="false" action=""><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="-808" y="-136">leavingBehind ?</label><nail x="-768" y="-112"/></transition><transition><source ref="id14"/><target ref="id7"/></transition><transition action=""><source ref="id7"/><target ref="id13"/><label kind="guard" x="-704" y="-8">x &gt;= 500</label><label kind="synchronisation" x="-704" y="-24">carStopped !</label><nail x="-664" y="24"/></transition><transition action=""><source ref="id13"/><target ref="id11"/><label kind="guard" x="-424" y="48">isCarReady()</label><label kind="assignment" x="-424" y="72">x = 0</label></transition><transition controllable="false" action=""><source ref="id12"/><target ref="id14"/><label kind="assignment" x="-928" y="80">x = 0</label></transition></template><template><name>Behind</name><declaration>clock x;</declaration><location id="id15" x="-112" y="-216" color="#00ff00"><name x="-88" y="-224">leaving</name><urgent/></location><location id="id16" x="-256" y="-216"><name x="-280" y="-256">waiting</name></location><location id="id17" x="-408" y="-216"><name x="-392" y="-248">ready</name></location><init ref="id17"/><transition><source ref="id15"/><target ref="id17"/><nail x="-112" y="-304"/><nail x="-408" y="-304"/></transition><transition action=""><source ref="id16"/><target ref="id15"/><label kind="synchronisation" x="-232" y="-208">carStopped ?</label></transition><transition controllable="false" action=""><source ref="id17"/><target ref="id16"/><label kind="synchronisation" x="-384" y="-208">leavingBehind !</label></transition></template><template><name>InFront</name><location id="id18" x="-216" y="-168"><name x="-232" y="-200">car</name></location><init ref="id18"/><transition controllable="false" action=""><source ref="id18"/><target ref="id18"/><label kind="synchronisation" x="-264" y="-72">comingInFront!</label><nail x="-272" y="-80"/><nail x="-160" y="-80"/></transition></template><system>system Pit, Behind, InFront, Mechanic;</system></nta>